# pushState friendly!
# The setup:
#   * javascript app is located at `${APP_DIR}`

charset utf-8;

tcp_nopush on;
tcp_nodelay off;
client_header_timeout ${CLIENT_HEADER_TIMEOUT}s;
client_body_timeout ${CLIENT_BODY_TIMEOUT}s;
client_max_body_size ${CLIENT_MAX_BODY_SIZE}k;
reset_timedout_connection on;

gzip on;

server {
  listen 80;
  root ${APP_DIR};
  server_name kehx-baby-names.net;
  index index.html index.htm;

  # Do not cache sw.js, required for offline-first updates.
  # location = /sw.js {
  #   add_header Cache-Control "no-cache";
  #   proxy_cache_bypass $http_pragma;
  #   proxy_cache_revalidate on;
  #   expires off;
  #   access_log off;
  # }

  # Do not cache index.html, required to force bundle update
  location = /index.html {
    add_header Cache-Control "no-cache";
    proxy_cache_bypass $http_pragma;
    proxy_cache_revalidate on;
    expires off;
    access_log off;
  }

  # Cache all other assets for max time
  location ~* \.(js|css|png|jpg|webp|jpeg|gif|ico|woff|woff2)$ {
    gzip_static       on;
    expires           max;
    add_header        Cache-Control public;
    add_header        Last-Modified "";
    add_header        ETag "";
  }

  # To make sure any assets can get through
  location / {
    try_files $uri @rewrites;
  }

  # If no asset matches, send it the javascript app. Hopefully it's a route in the app!
  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }

  # Return error if nothing matched
  error_page 404 @rewrites;
}
